@model OrchardCore.Commerce.ViewModels.AddressFieldViewModel
@using OrchardCore.Commerce.Settings

@{
    var settings = Model.PartFieldDefinition.GetSettings<AddressPartFieldSettings>();
    var hideAddress = Model.Address != null && Model.Address.Disabled ? "none" : "block";
    var addressId = @Html.IdFor(m => m.Address);
}
@if (!string.IsNullOrWhiteSpace(settings.Hint))
{
    <h5 class="text-primary mt-3">@settings.Hint</h5>
}
@if (settings.CanBeDisabled)
{
    <div class="row">
        <span class="switch">
            <input asp-for="Address.Disabled" type="checkbox" class="switch switch-sm content-preview-select">
            <label asp-for="Address.Disabled">@settings.DisableLabel</label>
        </span>
    </div>
}
<div style="display:@hideAddress" id="@addressId">
    <div class="row">
        <div class="form-group col-md-12">
            <label asp-for="Address.Name">@T["Name"]</label>
        </div>
        <div class="form-group col-md-6" asp-validation-class-for="Address.Name">
            <input asp-for="Address.Name" class="form-control content-preview-text" required="required" />
        </div>
    </div>
    <div class="row">
        <div class="form-group col-md-12">
            <label asp-for="Address.Company">@T["Company or institution"]</label>
        </div>
        <div class="form-group col-md-6" asp-validation-class-for="Address.Company">
            <input asp-for="Address.Company" class="form-control content-preview-text" />
        </div>
    </div>
    <div class="row">
        <div class="form-group col-md-12">
            <label asp-for="Address.StreetAddress1">@T["Street address"]</label>
        </div>
        <div class="form-group col-md-6" asp-validation-class-for="Address.StreetAddress1">
            <input asp-for="Address.StreetAddress1" class="form-control content-preview-text" required="required" />
        </div>
    </div>
    @if (settings.UseBoxNow)
    {
        <div class="row">
            <a href="javascript:;" class="boxnow-map-widget-button">Odabir BOX NOW pretinca za dostavu (do 20kg)</a>
            <div id="boxnowmap" style=""></div>
        </div>
    }
    <div class="row">
        <div class="form-group col-md-12">
            <label asp-for="Address.StreetAddress2">@T["Street address"]</label>
        </div>
        <div class="form-group col-md-6" asp-validation-class-for="Address.StreetAddress2">
            <input asp-for="Address.StreetAddress2" class="form-control content-preview-text" />
        </div>
    </div>
    <div class="row">
        <div class="form-group col-md-12">
            <label asp-for="Address.City">@T["City"]</label>
        </div>
        <div class="form-group col-md-6" asp-validation-class-for="Address.City">
            <input asp-for="Address.City" class="form-control content-preview-text" required="required" />
        </div>
    </div>
    <div class="row">
        <div class="form-group col-md-12">
            <label asp-for="Address.PostalCode">@T["Postal code"]</label>
        </div>
        <div class="form-group col-md-6" asp-validation-class-for="Address.PostalCode">
            <input asp-for="Address.PostalCode" class="form-control content-preview-text" />
        </div>
    </div>
    <div class="row">
        <div class="form-group col-md-12">
            <label asp-for="Address.Region">@T["Country or region"]</label>
        </div>
        <div class="form-group col-md-6" asp-validation-class-for="Address.Region">
            <select asp-for="Address.Region"
                    asp-items="@Model.Regions.Select(region => new SelectListItem(
                    region.DisplayName,
                    region.TwoLetterISORegionName))"
                    class="form-control content-preview-text" required="required"></select>
        </div>
    </div>
</div>
<div style="display:@hideAddress" id="@(addressId)_Instructions">
    @settings.DisabledText
</div>
<script asp-name="commerce-regions" asp-src="~/OrchardCore.Commerce/Scripts/commerce-regions.js" at="Foot" depends-on="jQuery"></script>
<script at="Foot" depends-on="commerce-regions">
    @if (Context.Items["commerce-regions-initialized"] == null)
    {
        <text>commerceRegionsInitialize(@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Provinces))); </text>
        Context.Items["commerce-regions-initialized"] = true;
    }
    commerceRegionsBind("#@Html.IdFor(m => m.Address.Province)", "#@Html.IdFor(m => m.Address.Region)");
    $("#@Html.IdFor(m => m.Address.Disabled)").change(function () {
    let requiredCtls = ["#@Html.IdFor(m => m.Address.Name)", "#@Html.IdFor(m => m.Address.StreetAddress1)", "#@Html.IdFor(m => m.Address.City)"];
    let addressDiv = $("#@(addressId)");
    if (this.checked) {
    requiredCtls.forEach(x=>$(x).removeAttr('required'));
    addressDiv.hide();
    $("#@(addressId)_Instructions", addressDiv).show();
    } else {
    addressDiv.show();
    requiredCtls.forEach(x=>$(x).attr('required',true));
    //$(["input:hidden", "textarea:hidden", "select:hidden"], addressDiv).attr("disabled", false);

    $("#@(addressId)_Instructions", addressDiv).hide();
    }
    })
</script>
@if (settings.UseBoxNow)
{
    <script at="Foot" type="text/javascript">
        var _bn_map_widget_config = {
        type: "popup",
        partnerId: 123,
        parentElement: "#boxnowmap",
        afterSelect: function (selected) {
        if(!selected || !selected.boxnowLockerId) {
            return;
        }
        document.getElementById("@Html.IdFor(m => m.Address.PostalCode)").value = selected.boxnowLockerPostalCode;
        document.getElementById("@Html.IdFor(m => m.Address.StreetAddress1)").value = selected.boxnowLockerAddressLine1;
        document.getElementById("@Html.IdFor(m => m.Address.StreetAddress2)").value = "ID:"+selected.boxnowLockerId;
        document.getElementById("@Html.IdFor(m => m.Address.City)").value = selected.boxnowLockerAddressLine2;
        }
        };
        (function (d) { var e = d.createElement("script"); e.src = "https://widget-cdn.boxnow.hr/map-widget/client/v5.js"; e.async = true; e.defer = true; d.getElementsByTagName("head")[0].appendChild(e); })(document);
    </script>
}